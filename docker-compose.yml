version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: hopngo-postgres
    environment:
      POSTGRES_DB: hopngo
      POSTGRES_USER: hopngo_user
      POSTGRES_PASSWORD: hopngo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hopngo-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: hopngo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hopngo-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hopngo-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/hopngo
      - DATABASE_USERNAME=hopngo_user
      - DATABASE_PASSWORD=hopngo_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - hopngo-network
    volumes:
      - ./backend:/app
      - /app/target

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hopngo-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - hopngo-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: hopngo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - hopngo-network

volumes:
  postgres_data:
  redis_data:

networks:
  hopngo-network:
    driver: bridge