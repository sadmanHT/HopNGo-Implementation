server:
  port: 8080

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        # Auth Service
        - id: auth-service
          uri: http://auth-service:8081
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Social Service
        - id: social-service
          uri: http://social-service:8082
          predicates:
            - Path=/social/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Booking Service
        - id: booking-service
          uri: http://booking-service:8083
          predicates:
            - Path=/bookings/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Market Service
        - id: market-service
          uri: http://market-service:8084
          predicates:
            - Path=/market/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Chat Service
        - id: chat-service
          uri: http://chat-service:8085
          predicates:
            - Path=/chat/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Notification Service
        - id: notification-service
          uri: http://notification-service:8086
          predicates:
            - Path=/notify/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Trip Planning Service
        - id: trip-planning-service
          uri: http://trip-planning-service:8087
          predicates:
            - Path=/trips/**
          filters:
            - name: JwtAuthenticationFilter
        
        # AI Service
        - id: ai-service
          uri: http://ai-service:8088
          predicates:
            - Path=/ai/**
          filters:
            - name: JwtAuthenticationFilter
        
        # Emergency Service
        - id: emergency-service
          uri: http://emergency-service:8089
          predicates:
            - Path=/emergency/**
          filters:
            - name: JwtAuthenticationFilter
      
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus,info
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging configuration
logging:
  level:
    com.hopngo.gateway: DEBUG
    org.springframework.cloud.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Redis configuration (for future rate limiting)
spring.data.redis:
  host: localhost
  port: 6379
  timeout: 2000ms
  lettuce:
    pool:
      max-active: 8
      max-idle: 8
      min-idle: 0