# Managed stateful services configuration for production
# Uses cloud-managed databases and message brokers

# ConfigMap for managed PostgreSQL connection
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: postgres-config
    app.kubernetes.io/component: database
data:
  host: "hopngo-prod-postgres.c1a2b3c4d5e6.us-central1.gcp.cloud.sql.proxy"
  port: "5432"
  database: "hopngo_prod"
  ssl_mode: "require"
  connection_pool_size: "20"
  max_connections: "100"
---
# ConfigMap for managed MongoDB connection
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: mongodb-config
    app.kubernetes.io/component: database
data:
  host: "hopngo-prod-mongodb.mongodb.net"
  port: "27017"
  database: "hopngo_prod"
  replica_set: "hopngo-prod-rs"
  ssl: "true"
  auth_source: "admin"
---
# ConfigMap for managed Redis connection
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: redis-config
    app.kubernetes.io/component: cache
data:
  host: "hopngo-prod-redis.abc123.cache.amazonaws.com"
  port: "6379"
  ssl: "true"
  cluster_mode: "true"
  max_connections: "50"
---
# ConfigMap for managed RabbitMQ connection
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: rabbitmq-config
    app.kubernetes.io/component: messaging
data:
  host: "hopngo-prod-rabbitmq.mq.us-central1.gcp.cloud.amqp.com"
  port: "5672"
  management_port: "15672"
  ssl: "true"
  virtual_host: "/hopngo-prod"
---
# PersistentVolumeClaim for temporary storage needs only
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temp-storage-pvc
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: temp-storage
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi
---
# PersistentVolumeClaim for log aggregation
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: logs-storage
    app.kubernetes.io/component: logging
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 50Gi
---
# Service for Cloud SQL Proxy (if using Google Cloud SQL)
apiVersion: v1
kind: Service
metadata:
  name: postgres-proxy
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: postgres-proxy
    app.kubernetes.io/component: database-proxy
spec:
  selector:
    app.kubernetes.io/name: postgres-proxy
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
# Deployment for Cloud SQL Proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-proxy
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: postgres-proxy
    app.kubernetes.io/component: database-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-proxy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-proxy
    spec:
      serviceAccountName: hopngo-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.33.2
        command:
        - "/cloud_sql_proxy"
        - "-instances=hopngo-production:us-central1:hopngo-prod-postgres=tcp:0.0.0.0:5432"
        - "-credential_file=/secrets/service_account.json"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: service-account-key
          mountPath: /secrets/
          readOnly: true
        - name: tmp
          mountPath: /tmp
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: service-account-key
        secret:
          secretName: cloudsql-service-account
      - name: tmp
        emptyDir: {}
---
# HorizontalPodAutoscaler for Cloud SQL Proxy
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres-proxy-hpa
  namespace: hopngo-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: postgres-proxy
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80