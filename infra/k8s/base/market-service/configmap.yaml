apiVersion: v1
kind: ConfigMap
metadata:
  name: market-service-config
  labels:
    app.kubernetes.io/name: market-service
    app.kubernetes.io/component: marketplace
data:
  database.url: "jdbc:postgresql://postgresql:5432/hopngo"
  redis.host: "redis-master"
  redis.port: "6379"
  application.yml: |
    server:
      port: 8084
      tomcat:
        threads:
          max: 200
          min-spare: 10
        max-connections: 8192
        accept-count: 100
        connection-timeout: 20000
        keep-alive-timeout: 20000
        max-keep-alive-requests: 100
    spring:
      application:
        name: market-service
      profiles:
        active: k8s
      datasource:
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          connection-timeout: 30000
          idle-timeout: 600000
          max-lifetime: 1800000
          leak-detection-threshold: 60000
          validation-timeout: 5000
          initialization-fail-timeout: 1
          isolate-internal-queries: false
          allow-pool-suspension: false
          read-only: false
          register-mbeans: true
          auto-commit: true
      jpa:
        hibernate:
          ddl-auto: validate
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
            jdbc:
              batch_size: 20
              order_inserts: true
              order_updates: true
            cache:
              use_second_level_cache: true
              use_query_cache: true
              region:
                factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
      redis:
        timeout: 2000ms
        lettuce:
          pool:
            max-active: 20
            max-idle: 10
            min-idle: 5
            max-wait: -1
          shutdown-timeout: 100ms
      data:
        mongodb:
          uri: mongodb://mongodb:27017/hopngo
          options:
            max-pool-size: 20
            min-pool-size: 5
            max-idle-time: 600000
            max-life-time: 1800000
            wait-queue-timeout: 120000
            maintenance-frequency: 60000
            maintenance-initial-delay: 0
            max-connecting: 2
      rabbitmq:
        host: rabbitmq
        port: 5672
        username: hopngo
        virtual-host: hopngo
        connection-timeout: 60000
        requested-heartbeat: 60
        publisher-confirms: true
        publisher-returns: true
        listener:
          simple:
            concurrency: 3
            max-concurrency: 10
            prefetch: 1
            transaction-size: 1
            acknowledge-mode: auto
            auto-startup: true
            retry:
              enabled: true
              initial-interval: 1000
              max-attempts: 3
              max-interval: 10000
              multiplier: 1.0
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          probes:
            enabled: true
          show-details: always
      metrics:
        export:
          prometheus:
            enabled: true
        distribution:
          percentiles-histogram:
            http.server.requests: true
          percentiles:
            http.server.requests: 0.5,0.95,0.99
        tags:
          application: market-service
    resilience4j:
      circuitbreaker:
        instances:
          default:
            sliding-window-size: 10
            minimum-number-of-calls: 5
            failure-rate-threshold: 50
            wait-duration-in-open-state: 30s
            permitted-number-of-calls-in-half-open-state: 3
          database:
            sliding-window-size: 20
            minimum-number-of-calls: 10
            failure-rate-threshold: 60
            wait-duration-in-open-state: 60s
            permitted-number-of-calls-in-half-open-state: 5
      ratelimiter:
        instances:
          default:
            limit-for-period: 100
            limit-refresh-period: 1s
            timeout-duration: 0s
          api:
            limit-for-period: 500
            limit-refresh-period: 1s
            timeout-duration: 100ms
      retry:
        instances:
          default:
            max-attempts: 3
            wait-duration: 1s
            exponential-backoff-multiplier: 2
            randomized-wait-factor: 0.5
          database:
            max-attempts: 5
            wait-duration: 500ms
            exponential-backoff-multiplier: 1.5
    jwt:
      public-key-location: classpath:jwt-public.key
    logging:
      level:
        com.hopngo.market: INFO
        org.springframework.data.redis: DEBUG
        com.zaxxer.hikari: DEBUG
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE