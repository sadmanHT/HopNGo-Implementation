apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: hopngo-backend-rollout
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: hopngo-backend
    app.kubernetes.io/component: rollout
    app.kubernetes.io/part-of: hopngo
    environment: production
  annotations:
    rollout.argoproj.io/revision: "1"
    notifications.argoproj.io/subscribe.on-rollout-completed.slack: "hopngo-deployments"
    notifications.argoproj.io/subscribe.on-rollout-aborted.slack: "hopngo-alerts"
spec:
  replicas: 6
  strategy:
    canary:
      # Canary deployment steps with traffic shifting
      steps:
      # Step 1: Deploy canary with 10% traffic
      - setWeight: 10
      - pause:
          duration: 2m
      
      # Step 2: Run analysis and increase to 25%
      - analysis:
          templates:
          - templateName: success-rate
          - templateName: latency-p99
          - templateName: error-rate
          args:
          - name: service-name
            value: hopngo-backend
          - name: namespace
            value: hopngo-prod
      - setWeight: 25
      - pause:
          duration: 5m
      
      # Step 3: Extended analysis and increase to 50%
      - analysis:
          templates:
          - templateName: success-rate
          - templateName: latency-p99
          - templateName: error-rate
          - templateName: cpu-usage
          - templateName: memory-usage
          args:
          - name: service-name
            value: hopngo-backend
          - name: namespace
            value: hopngo-prod
      - setWeight: 50
      - pause:
          duration: 10m
      
      # Step 4: Final analysis before full rollout
      - analysis:
          templates:
          - templateName: success-rate
          - templateName: latency-p99
          - templateName: error-rate
          - templateName: cpu-usage
          - templateName: memory-usage
          - templateName: business-metrics
          args:
          - name: service-name
            value: hopngo-backend
          - name: namespace
            value: hopngo-prod
      - setWeight: 100
      
      # Traffic routing configuration
      trafficRouting:
        nginx:
          stableIngress: hopngo-backend-stable
          annotationPrefix: nginx.ingress.kubernetes.io
          additionalIngressAnnotations:
            canary-by-header: X-Canary
            canary-by-header-value: "true"
      
      # Analysis configuration
      analysis:
        templates:
        - templateName: success-rate
        - templateName: latency-p99
        args:
        - name: service-name
          value: hopngo-backend
        - name: namespace
          value: hopngo-prod
        startingStep: 2
        successCondition: result[0] >= 0.95 && result[1] <= 1000
        failureCondition: result[0] < 0.90 || result[1] > 2000
      
      # Canary service configuration
      canaryService: hopngo-backend-canary
      stableService: hopngo-backend-stable
      
      # Anti-affinity for canary pods
      antiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution: {}
        preferredDuringSchedulingIgnoredDuringExecution:
          weight: 1
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - hopngo-backend
            topologyKey: kubernetes.io/hostname
      
      # Scaledown delay
      scaleDownDelaySeconds: 30
      abortScaleDownDelaySeconds: 30
  
  # Pod template specification
  selector:
    matchLabels:
      app.kubernetes.io/name: hopngo-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hopngo-backend
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: hopngo
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: hopngo-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: hopngo-backend
        image: ghcr.io/hopngo/backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: METRICS_ENABLED
          value: "true"
        - name: TRACING_ENABLED
          value: "true"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: hopngo-database
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: hopngo-redis
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: hopngo-api-keys
              key: jwt-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      terminationGracePeriodSeconds: 30
      
  # Rollout configuration
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600
  
  # Rollback configuration
  rollbackWindow:
    revisions: 3
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: hopngo-frontend-rollout
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: hopngo-frontend
    app.kubernetes.io/component: rollout
    app.kubernetes.io/part-of: hopngo
    environment: production
spec:
  replicas: 4
  strategy:
    canary:
      steps:
      - setWeight: 20
      - pause:
          duration: 1m
      - analysis:
          templates:
          - templateName: frontend-success-rate
          - templateName: frontend-load-time
          args:
          - name: service-name
            value: hopngo-frontend
      - setWeight: 50
      - pause:
          duration: 3m
      - analysis:
          templates:
          - templateName: frontend-success-rate
          - templateName: frontend-load-time
          - templateName: frontend-error-rate
          args:
          - name: service-name
            value: hopngo-frontend
      - setWeight: 100
      
      trafficRouting:
        nginx:
          stableIngress: hopngo-frontend-stable
          annotationPrefix: nginx.ingress.kubernetes.io
      
      canaryService: hopngo-frontend-canary
      stableService: hopngo-frontend-stable
      
      scaleDownDelaySeconds: 30
      abortScaleDownDelaySeconds: 30
  
  selector:
    matchLabels:
      app.kubernetes.io/name: hopngo-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hopngo-frontend
        app.kubernetes.io/component: frontend
        app.kubernetes.io/part-of: hopngo
        environment: production
    spec:
      serviceAccountName: hopngo-frontend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: hopngo-frontend
        image: ghcr.io/hopngo/frontend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.hopngo.com"
        - name: NEXT_PUBLIC_ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /.next
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      terminationGracePeriodSeconds: 30
  
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600