apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: argo-rollouts
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/ArgoRolloutsRole"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: argo-rollouts
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - rollouts/status
  - rollouts/finalizers
  - experiments
  - experiments/status
  - experiments/finalizers
  - analysisruns
  - analysisruns/status
  - analysisruns/finalizers
  - analysistemplates
  - clusteranalysistemplates
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - podtemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - networking.k8s.io
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  - destinationrules
  verbs:
  - watch
  - get
  - update
  - patch
  - list
- apiGroups:
  - split.smi-spec.io
  resources:
  - trafficsplits
  verbs:
  - create
  - watch
  - get
  - update
  - patch
- apiGroups:
  - getambassador.io
  - x.getambassador.io
  resources:
  - mappings
  - ambassadormappings
  verbs:
  - create
  - watch
  - get
  - update
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - elbv2.k8s.aws
  resources:
  - targetgroupbindings
  verbs:
  - list
  - get
- apiGroups:
  - appmesh.k8s.aws
  resources:
  - virtualnodes
  - virtualrouters
  verbs:
  - watch
  - get
  - list
- apiGroups:
  - traefik.containo.us
  resources:
  - traefikservices
  verbs:
  - watch
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: argo-rollouts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts
subjects:
- kind: ServiceAccount
  name: argo-rollouts
  namespace: argo-rollouts
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hopngo-rollouts
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: hopngo
    app.kubernetes.io/component: rollouts-sa
    app.kubernetes.io/part-of: hopngo
    environment: production
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT_ID:role/HopNGoRolloutsRole"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hopngo-rollouts
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: hopngo
    app.kubernetes.io/component: rollouts-role
    app.kubernetes.io/part-of: hopngo
    environment: production
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - rollouts/status
  - rollouts/finalizers
  - experiments
  - experiments/status
  - experiments/finalizers
  - analysisruns
  - analysisruns/status
  - analysisruns/finalizers
  - analysistemplates
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hopngo-rollouts
  namespace: hopngo-prod
  labels:
    app.kubernetes.io/name: hopngo
    app.kubernetes.io/component: rollouts-binding
    app.kubernetes.io/part-of: hopngo
    environment: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hopngo-rollouts
subjects:
- kind: ServiceAccount
  name: hopngo-rollouts
  namespace: hopngo-prod
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts-metrics
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts-metrics
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: argo-rollouts
rules:
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - experiments
  - analysisruns
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - services
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts-metrics
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: argo-rollouts
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-metrics
subjects:
- kind: ServiceAccount
  name: argo-rollouts-metrics
  namespace: argo-rollouts
---
apiVersion: v1
kind: Secret
metadata:
  name: argo-rollouts-notification-secret
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: notifications
    app.kubernetes.io/part-of: argo-rollouts
type: Opaque
stringData:
  slack-token: "SLACK_BOT_TOKEN_PLACEHOLDER"
  webhook-url: "WEBHOOK_URL_PLACEHOLDER"
  email-username: "EMAIL_USERNAME_PLACEHOLDER"
  email-password: "EMAIL_PASSWORD_PLACEHOLDER"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-rollouts-notification-configmap
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/component: notifications
    app.kubernetes.io/part-of: argo-rollouts
data:
  config.yaml: |
    triggers:
      - name: rollout-updated
        condition: rollout.status.phase in ['Progressing', 'Healthy', 'Degraded']
        template: rollout-status
      - name: rollout-step-completed
        condition: rollout.status.currentStepIndex != rollout.status.currentStepIndex
        template: rollout-step
      - name: analysis-run-failed
        condition: analysisrun.status.phase == 'Failed'
        template: analysis-failed
    
    templates:
      - name: rollout-status
        title: "Rollout {{.rollout.metadata.name}} {{.rollout.status.phase}}"
        body: |
          Rollout Name: {{.rollout.metadata.name}}
          Rollout Namespace: {{.rollout.metadata.namespace}}
          Strategy: {{.rollout.spec.strategy.canary}}
          Status: {{.rollout.status.phase}}
          Message: {{.rollout.status.message}}
          Revision: {{.rollout.status.currentPodHash}}
          
      - name: rollout-step
        title: "Rollout {{.rollout.metadata.name}} step {{.rollout.status.currentStepIndex}}"
        body: |
          Rollout: {{.rollout.metadata.name}}
          Step: {{.rollout.status.currentStepIndex}}/{{len .rollout.spec.strategy.canary.steps}}
          Traffic Weight: {{.rollout.status.canary.weights.canary}}%
          
      - name: analysis-failed
        title: "Analysis Run {{.analysisrun.metadata.name}} Failed"
        body: |
          Analysis Run: {{.analysisrun.metadata.name}}
          Rollout: {{.analysisrun.metadata.labels.rollout}}
          Status: {{.analysisrun.status.phase}}
          Message: {{.analysisrun.status.message}}
    
    services:
      slack:
        token: $slack-token
      webhook:
        url: $webhook-url
      email:
        host: smtp.gmail.com
        port: 587
        username: $email-username
        password: $email-password
        from: $email-username
    
    subscriptions:
      - recipients:
        - slack:hopngo-deployments
        - webhook:
        - email:devops@hopngo.com
        triggers:
        - rollout-updated
        - rollout-step-completed
        - analysis-run-failed