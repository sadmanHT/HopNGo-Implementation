server:
  port: 8089

spring:
  application:
    name: emergency-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/hopngo_emergency
    username: hopngo
    password: hopngo_dev_2024!
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
  cloud:
    function:
      definition: emergencyTriggered
    stream:
      bindings:
        emergencyTriggered-out-0:
          destination: emergency.triggered
          content-type: application/json
      rabbit:
        bindings:
          emergencyTriggered-out-0:
            producer:
              routing-key-expression: "'emergency.triggered'"
      default-binder: rabbit
  
  rabbitmq:
    host: localhost
    port: 5672
    username: hopngo
    password: rabbit_dev_2024!
    virtual-host: hopngo

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces

logging:
  level:
    com.hopngo.emergency: DEBUG
    org.springframework.cloud.stream: DEBUG
    org.springframework.amqp: DEBUG