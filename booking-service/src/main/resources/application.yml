server:
  port: 8083

spring:
  application:
    name: booking-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/hopngo_booking
    username: hopngo
    password: hopngo_dev_2024!
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      pool-name: BookingServiceCP
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: false
        use_sql_comments: false
        generate_statistics: true
        # N+1 Query Prevention
        default_batch_fetch_size: 16
        batch_fetch_style: PADDED
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        # JDBC Batching
        jdbc:
          batch_size: 25
          batch_versioned_data: true
        # Query Optimization
        query:
          plan_cache_max_size: 2048
          plan_parameter_metadata_max_size: 128
        # Connection Pool Integration
        connection:
          provider_disables_autocommit: true
        # Performance Monitoring
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 1000
  
  flyway:
    enabled: false
  
  cloud:
    stream:
      bindings:
        bookingEvents-out-0:
          destination: booking.events
          content-type: application/json
        reviewEvents-out-0:
          destination: content.exchange
          content-type: application/json
        paymentEvents-in-0:
          destination: payment.events
          content-type: application/json
          group: booking-service
      rabbit:
        bindings:
          bookingEvents-out-0:
            producer:
              routing-key-expression: headers['eventType']
          reviewEvents-out-0:
            producer:
              routing-key-expression: headers['eventType']
          paymentEvents-in-0:
            consumer:
              binding-routing-key: 'payment.succeeded,payment.failed'
              auto-bind-dlq: true
              republish-to-dlq: true
              max-attempts: 3
      function:
        definition: bookingEvents;reviewEvents;paymentEventHandler
  
  rabbitmq:
    host: localhost
    port: 5672
    username: hopngo
    password: rabbit_dev_2024!
    virtual-host: hopngo
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    com.hopngo.booking: DEBUG
    org.springframework.cloud.stream: DEBUG

event:
  publisher:
    enabled: true
    batch-size: 100
    flush-interval: 5000

search:
  opensearch:
    host: localhost
    port: 9200
    scheme: http
    connect-timeout: 5000
    socket-timeout: 30000
    enabled: true